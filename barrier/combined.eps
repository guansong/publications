%!PS-Adobe-2.0 EPSF-2.0
%%Title: combined.fig
%%Creator: fig2dev Version 3.2 Patchlevel 3d
%%CreationDate: Thu Feb  6 16:43:39 2003
%%For: guansong@r4lp2 (Guansong -- TPO)
%%BoundingBox: 0 0 303 190
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 190 moveto 0 0 lineto 303 0 lineto 303 190 lineto closepath clip newpath
-26.3 230.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
% Arc
7.500 slw
gs  clippath
4275 3858 m 4301 3804 l 4165 3737 l 4260 3818 l 4139 3791 l cp
eoclip
n 4800.0 2625.0 1309.8 166.8 113.6 arcn
gs col0 s gr
 gr

% arrowhead
n 4139 3791 m 4260 3818 l 4165 3737 l  col0 s
% Arc
gs  clippath
1398 3804 m 1424 3858 l 1560 3791 l 1440 3818 l 1534 3737 l cp
eoclip
n 900.0 2625.0 1309.8 13.2 66.4 arc
gs col0 s gr
 gr

% arrowhead
n 1534 3737 m 1440 3818 l 1560 3791 l  col0 s
% Arc
gs  clippath
2220 1965 m 2280 1964 l 2278 1812 l 2250 1933 l 2218 1813 l cp
eoclip
n 873.2 1901.8 1377.6 -62.9 2.0 arc
gs col0 s gr
 gr

% arrowhead
n 2218 1813 m 2250 1933 l 2278 1812 l  col0 s
% Arc
gs  clippath
3419 1964 m 3479 1965 l 3481 1813 l 3450 1933 l 3421 1812 l cp
eoclip
n 4826.8 1901.8 1377.6 -117.1 178.0 arcn
gs col0 s gr
 gr

% arrowhead
n 3421 1812 m 3450 1933 l 3481 1813 l  col0 s
% Arc
gs  clippath
3723 2679 m 3749 2733 l 3885 2666 l 3765 2693 l 3859 2612 l cp
eoclip
n 3881.2 2812.5 172.9 139.4 -139.4 arcn
gs col0 s gr
 gr

% arrowhead
n 3859 2612 m 3765 2693 l 3885 2666 l  col0 s
% Arc
gs  clippath
1903 2193 m 1872 2141 l 1742 2217 l 1861 2183 l 1772 2269 l cp
eoclip
n 1687.5 1987.5 265.2 8.1 45.0 arcn
gs col0 s gr
 gr

% arrowhead
n 1772 2269 m 1861 2183 l 1742 2217 l  col0 s
% Arc
gs  clippath
3427 2800 m 3483 2777 l 3426 2637 l 3444 2760 l 3370 2660 l cp
eoclip
n 4012.5 2475.0 637.5 -151.9 151.9 arcn
gs col0 s gr
 gr

% arrowhead
n 3370 2660 m 3444 2760 l 3426 2637 l  col0 s
% Arc
gs  clippath
2141 2777 m 2197 2800 l 2254 2660 l 2181 2760 l 2198 2637 l cp
eoclip
n 1612.5 2475.0 637.5 -28.1 28.1 arc
gs col0 s gr
 gr

% arrowhead
n 2198 2637 m 2181 2760 l 2254 2660 l  col0 s
% Polyline
n 555 1500 m 450 1500 450 1920 105 arcto 4 {pop} repeat
  450 2025 1620 2025 105 arcto 4 {pop} repeat
  1725 2025 1725 1605 105 arcto 4 {pop} repeat
  1725 1500 555 1500 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 1305 3150 m 1200 3150 1200 3345 105 arcto 4 {pop} repeat
  1200 3450 2145 3450 105 arcto 4 {pop} repeat
  2250 3450 2250 3255 105 arcto 4 {pop} repeat
  2250 3150 1305 3150 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 4005 2625 m 3900 2625 3900 2820 105 arcto 4 {pop} repeat
  3900 2925 5370 2925 105 arcto 4 {pop} repeat
  5475 2925 5475 2730 105 arcto 4 {pop} repeat
  5475 2625 4005 2625 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3480 3150 m 3375 3150 3375 3345 105 arcto 4 {pop} repeat
  3375 3450 4320 3450 105 arcto 4 {pop} repeat
  4425 3450 4425 3255 105 arcto 4 {pop} repeat
  4425 3150 3480 3150 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
/Times-Roman ff 360.00 scf sf
2550 2175 m
gs 1 -1 sc (. . .) col0 sh gr
% Polyline
n 3030 2250 m 2925 2250 2925 2445 105 arcto 4 {pop} repeat
  2925 2550 3870 2550 105 arcto 4 {pop} repeat
  3975 2550 3975 2355 105 arcto 4 {pop} repeat
  3975 2250 3030 2250 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
/Times-Roman ff 360.00 scf sf
2550 1200 m
gs 1 -1 sc (. . .) col0 sh gr
% Polyline
n 3330 1275 m 3225 1275 3225 1470 105 arcto 4 {pop} repeat
  3225 1575 4170 1575 105 arcto 4 {pop} repeat
  4275 1575 4275 1380 105 arcto 4 {pop} repeat
  4275 1275 3330 1275 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
/Times-Roman ff 360.00 scf sf
2550 3225 m
gs 1 -1 sc (. . .) col0 sh gr
% Polyline
15.000 slw
n 3300 2025 m 3675 2025 l 3675 2175 l 3300 2175 l
 cp gs col0 s gr 
% Polyline
7.500 slw
n 1230 1125 m 1125 1125 1125 1320 105 arcto 4 {pop} repeat
  1125 1425 2070 1425 105 arcto 4 {pop} repeat
  2175 1425 2175 1230 105 arcto 4 {pop} repeat
  2175 1125 1230 1125 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
15.000 slw
n 3300 2775 m 3675 2775 l 3675 2925 l 3300 2925 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
675 1950 m
gs 1 -1 sc (set all to 1) col0 sh gr
% Polyline
n 2025 2025 m 2400 2025 l 2400 2175 l 2025 2175 l
 cp gs col0 s gr 
% Polyline
n 2025 2775 m 2400 2775 l 2400 2925 l 2025 2925 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
3900 2100 m
gs 1 -1 sc (Dist counter) col0 sh gr
/Times-Roman ff 180.00 scf sf
975 2850 m
gs 1 -1 sc (Local sensor) col0 sh gr
/Times-Roman ff 360.00 scf sf
2550 2925 m
gs 1 -1 sc (. . .) col0 sh gr
% Polyline
7.500 slw
n 1755 2325 m 1650 2325 1650 2520 105 arcto 4 {pop} repeat
  1650 2625 2370 2625 105 arcto 4 {pop} repeat
  2475 2625 2475 2430 105 arcto 4 {pop} repeat
  2475 2325 1755 2325 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
/Times-Roman ff 180.00 scf sf
3600 3375 m
gs 1 -1 sc (Leave) col0 sh gr
/Times-Roman ff 180.00 scf sf
3000 2475 m
gs 1 -1 sc (Check local) col0 sh gr
/Times-Roman ff 180.00 scf sf
3375 1500 m
gs 1 -1 sc (Decrease) col0 sh gr
/Times-Roman ff 180.00 scf sf
1275 1350 m
gs 1 -1 sc (Decrease) col0 sh gr
% Polyline
n 3300 2775 m 3600 2775 l 3600 2925 l 3300 2925 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 220.00 185.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
1425 3375 m
gs 1 -1 sc (Leave) col0 sh gr
/Times-Roman ff 180.00 scf sf
1800 2550 m
gs 1 -1 sc (Set all 0) col0 sh gr
/Times-Roman ff 180.00 scf sf
3975 2850 m
gs 1 -1 sc (Spin until 0 set to 1) col0 sh gr
% Polyline
n 2025 2775 m 2325 2775 l 2325 2925 l 2025 2925 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 135.00 185.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3300 2025 m 3600 2025 l 3600 2175 l 3300 2175 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 220.00 135.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2025 2025 m 2325 2025 l 2325 2175 l 2025 2175 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 135.00 135.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
525 1725 m
gs 1 -1 sc (Spin until all 0,) col0 sh gr
$F2psEnd
rs
end
